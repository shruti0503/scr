"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.log = void 0;
var LogLevel;
(function (LogLevel) {
    LogLevel["DEBUG"] = "DEBUG";
    LogLevel["INFO"] = "INFO";
    LogLevel["WARN"] = "WARN";
    LogLevel["ERROR"] = "ERROR";
})(LogLevel || (LogLevel = {}));
class Logger {
    constructor(name, level = LogLevel.INFO) {
        Object.defineProperty(this, "level", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.name = name;
        this.level = level;
    }
    debug(...args) {
        if (this.level <= LogLevel.DEBUG) {
            console.log(...args);
        }
    }
    info(...args) {
        if (this.level <= LogLevel.INFO) {
            console.info(...args);
        }
    }
    warn(...args) {
        if (this.level <= LogLevel.WARN) {
            console.warn(...args);
        }
    }
    error(...args) {
        if (this.level <= LogLevel.ERROR) {
            console.error(...args);
        }
    }
    setLevel(level) {
        if (Object.values(LogLevel).includes(level)) {
            this.level = level;
        }
        else {
            console.error(`Invalid log level: ${level}`);
        }
    }
}
exports.default = Logger;
exports.log = new Logger('scrapfly');
