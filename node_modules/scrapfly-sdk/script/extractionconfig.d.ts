export declare enum CompressionFormat {
    /**
      Document compression format.
  
      Attributes:
          GZIP: gzip format.
          ZSTD: zstd format.
          DEFLATE: deflate.
      """
       */
    GZIP = "gzip",
    ZSTD = "zstd",
    DEFLATE = "deflate"
}
type ExtractionConfigOptions = {
    body: string;
    content_type: string;
    url?: string;
    charset?: string;
    extraction_template?: string;
    extraction_ephemeral_template?: object;
    extraction_prompt?: string;
    extraction_model?: string;
    is_document_compressed?: boolean;
    document_compression_format?: 'gzip' | 'zstd' | 'deflate' | CompressionFormat;
    webhook?: string;
    template?: string;
    ephemeral_template?: object;
};
export declare class ExtractionConfig {
    body: string | Uint8Array;
    content_type: string;
    url?: string;
    charset?: string;
    extraction_template?: string;
    extraction_ephemeral_template?: object;
    extraction_prompt?: string;
    extraction_model?: string;
    is_document_compressed?: boolean;
    document_compression_format?: 'gzip' | 'zstd' | 'deflate' | CompressionFormat;
    webhook?: string;
    template?: string;
    ephemeral_template?: object;
    constructor(options: ExtractionConfigOptions);
    private validateOptions;
    toApiParams(options: {
        key: string;
    }): Record<string, any>;
}
export {};
//# sourceMappingURL=extractionconfig.d.ts.map